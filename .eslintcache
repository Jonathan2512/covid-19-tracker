[{"G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\index.js":"1","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\App.js":"2","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\InforBox.js":"3","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\Map.js":"4","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\Table.js":"5","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\util.js":"6","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\LineGraph.js":"7","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\Circle.js":"8"},{"size":389,"mtime":1610606740006,"results":"9","hashOfConfig":"10"},{"size":4564,"mtime":1610685038460,"results":"11","hashOfConfig":"10"},{"size":1024,"mtime":1610684683118,"results":"12","hashOfConfig":"10"},{"size":726,"mtime":1610682328217,"results":"13","hashOfConfig":"10"},{"size":607,"mtime":1610608092690,"results":"14","hashOfConfig":"10"},{"size":590,"mtime":1610681796971,"results":"15","hashOfConfig":"10"},{"size":2768,"mtime":1610685076922,"results":"16","hashOfConfig":"10"},{"size":1987,"mtime":1610684123032,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ijwprj",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\index.js",[],["37","38"],"G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\App.js",["39"],"import React, { useState, useEffect } from 'react';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@material-ui/core';\nimport InforBox from './InforBox';\nimport Map from './Map';\nimport Table from './Table';\nimport LineGraph from './LineGraph';\nimport './App.css';\nimport { sortData, prettyPrintStat } from './util'\n\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState('worldwide');\n  const [countryInfo, setCountryInfo] = useState({});\n  const [casesType, setCasesType] = useState('cases');\n  const [tableData, setTableData] = useState([]);\n  const [mapCenter, setMapCenter] = useState({ lat: 38.80746, lng: 19.4796 });\n  const [mapZoom, setMapZoom] = useState(2);\n  const [mapCountries, setMapCountries] = useState([]);\n\n  useEffect(() => {\n    fetchCountryInfo(country)\n  }, []);\n\n  useEffect(() => {\n    // async -> send a request, wait for it, do something\n    const getCountriesData = async () => {\n      await fetch(\"https://disease.sh/v3/covid-19/countries\")\n        .then((response) => response.json())\n        .then((data) => {\n          const APIcountries = data.map((country) => (\n            {\n              name: country.country, // United States, United Kingdom\n              value: country.countryInfo.iso2,  // US, UK\n            }\n          ));\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n          setCountries(APIcountries);\n          setMapCountries(data);\n        });\n    };\n    getCountriesData();\n  }, []);\n\n  const fetchCountryInfo = async (countryCode) => {\n    const url =\n      countryCode === 'worldwide'\n        ? 'https://disease.sh/v3/covid-19/all'\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    await fetch(url)\n      .then(response => response.json())\n      .then(data => {\n        // All of the data from the country response\n        setCountryInfo(data);\n        if (countryCode !== 'worldwide') {\n          setMapCenter([data.countryInfo.lat, data.countryInfo.long]);\n          setMapZoom(4);\n        }\n      })\n  };\n\n  const renderCountriesList = () => (\n    countries.map((country, index) => {\n      return <MenuItem key={index} value={country.value}>{country.name}</MenuItem>\n    })\n  )\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    fetchCountryInfo(countryCode)\n  }\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          {/* Header */}\n          <h1>COVID-19 TRACKER</h1>\n          {/* Title + Select Input Field */}\n          <FormControl className=\"app__dropdown\">\n            <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={onCountryChange}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {renderCountriesList()}\n            </Select>\n          </FormControl>\n        </div>\n        <div className=\"app__stats\">\n          {/* Infor box - Cases */}\n          <InforBox\n            isRed\n            active={casesType === 'cases'}\n            onClick={() => { setCasesType('cases') }}\n            title=\"Coronavirus cases\"\n            cases={prettyPrintStat(countryInfo.todayCases)}\n            total={countryInfo.cases}\n          />\n          {/* Infor box - Recovered */}\n          <InforBox\n            active={casesType === 'recovered'}\n            onClick={() => { setCasesType('recovered') }}\n            title=\"Recovered\"\n            cases={prettyPrintStat(countryInfo.todayRecovered)}\n            total={countryInfo.recovered}\n          />\n          {/* Infor box - Detail */}\n          <InforBox\n            isRed\n            active={casesType === 'deaths'}\n            onClick={() => { setCasesType('deaths') }}\n            title=\"Deaths\"\n            cases={prettyPrintStat(countryInfo.todayDeaths)}\n            total={countryInfo.deaths}\n          />\n        </div>\n        {/* Map */}\n        <Map\n          casesType={casesType}\n          countries={mapCountries}\n          center={mapCenter}\n          zoom={mapZoom}\n        />\n      </div>\n      <Card className=\"app__right\">\n        <CardContent>\n          {/* Table */}\n          <h3>Live Cases By Country</h3>\n          <Table countries={tableData} />\n          {/* Graph */}\n          <h3 className=\"newCases\">Worldwide new {casesType}</h3>\n          <LineGraph className=\"app__graph\" casesType={casesType} />\n        </CardContent>\n      </Card>\n    </div >\n  );\n}\n\nexport default App;\n","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\InforBox.js",[],"G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\Map.js",[],"G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\Table.js",[],"G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\util.js",["40"],"import numeral from 'numeral';\r\nexport const sortData = (data) => {\r\n    const sortedData = [...data];\r\n    // sort decreasingly\r\n    sortedData.sort((a, b) => (a.cases > b.cases ? -1 : 1));\r\n    { /*\r\n        if (a.cases > (or <) b.cases) {\r\n            return -1; //bieu thuc so sanh tra ve nho hon 0, ham sort xep a len truoc;\r\n        } else { \r\n            return 1; // bieu thuc so sanh tra ve lon hon 0, ham sort xep b len truoc;\r\n        }\r\n    */}\r\n    return sortedData;\r\n}\r\n\r\nexport const prettyPrintStat = (stat) => (\r\n    stat ? `+${numeral(stat).format(\"0.0a\")}` : '+0'\r\n)\r\n\r\n","G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\LineGraph.js",[],"G:\\React_Projects\\Covid_Tracker\\covid_tracker_app\\src\\Circle.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":24,"column":6,"nodeType":"47","endLine":24,"endColumn":8,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":5,"nodeType":"51","messageId":"52","endLine":12,"endColumn":8},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'country'. Either include it or remove the dependency array.","ArrayExpression",["55"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation",{"desc":"56","fix":"57"},"Update the dependencies array to be: [country]",{"range":"58","text":"59"},[855,857],"[country]"]